% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_detect_multiple.R
\name{str_detect_multiple}
\alias{str_detect_multiple}
\alias{str_detect_multiple_and}
\alias{str_detect_multiple_or}
\title{Detect the presence or absence of a patterns in a string.}
\usage{
str_detect_multiple(string, patterns, method)

str_detect_multiple_and(string, patterns)

str_detect_multiple_or(string, patterns)
}
\arguments{
\item{string}{Input vector. Either a character vector, or something coercible to one.}

\item{patterns}{Patterns to look for as a character vector (e.g. c("foo", "bar) )

The default interpretation of each pattern in the character vector is a regular expression, as described in stringi::stringi-search-regex. Control options with regex().

Match a fixed string (i.e. by comparing only bytes), using fixed(). This is fast, but approximate. Generally, for matching human text, you'll want coll() which respects character matching rules for the specified locale.

Match character, word, line and sentence boundaries with boundary(). An empty pattern, "", is equivalent to boundary("character").}

\item{method}{Match method: "and" or "or". "and" will only match strings where all patterns in the character vector are found in the string. "or" will match strings where any of the patterns in the character vector are found in the string.}
}
\value{
The part of the string after the first pattern and before the second pattern.
}
\description{
Vectorised over `string` and `pattern`. Equivalent to str_detect, but capable of multiple patterns.
}
\examples{
test_string <- 'complicated_file_name-32.csv'
str_detect_multiple(test_string, c('hadley', 'csv'), method = "and")
str_detect_multiple(test_string, c('hadley', 'csv'), method = "or")


str_detect_multiple_and(test_string, c('hadley', 'csv'))
str_detect_multiple_or(test_string, c('hadley', 'csv'))
}
